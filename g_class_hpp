#!/usr/bin/env python
import sys
import datetime


if len(sys.argv) > 1:
	nclass = sys.argv[1]
else:
	nclass = ""

hdr = nclass+".hpp"
src = nclass+".cpp"
tmp_src = hdr+"                                                      "
comment_source_nam = tmp_src[:20]
dateandtimeandstuffofthing=str(datetime.datetime.now())

header = """\
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **
**                                                                                             **
**          oliver belanger - obelange                                                         **
**          {000000000000000000}                                                               **
**                                                                                             **
**                                                                                             **
**          {000000000000000000000001}                                                         **
**                                                                                             **
**                                                                                             **
** * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

""".format(comment_source_nam, dateandtimeandstuffofthing)

wr = []
wr.append(header)

wr.append("#include <iostream>\n\n")

wr.append("#ifndef {0}_H\n".format(nclass.upper()))
wr.append("# define {0}_H\n\n".format(nclass.upper()))
wr.append("class {0}\n".format(nclass))
wr.append("{\n")
wr.append("public:\n")
wr.append("\t{0}(void);\n".format(nclass))
wr.append("\t{0}(void);\n".format(nclass))
wr.append("\t{0}(const {0}& rhs);\n".format(nclass))
wr.append("\t~{0}(void);\n\n".format(nclass))
wr.append("\t{0}&\toperator=(const {0}& rhs);\n\n".format(nclass))
wr.append("private:\n\n".format(nclass))


wr.append("}\n")
wr.append("#endif\n")


f = open(hdr, "w")

for x in wr:
	f.write(x)

f.close()











